services:
  nginx:
    image: nginx:1.27-alpine
    container_name: nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
      - "8000:8000"
    volumes:
      - ./nginx/conf.d:/etc/nginx/conf.d:ro
      - ./nginx/html:/usr/share/nginx/html:ro
      - ./nginx/log:/var/log/nginx
      - certbot-certs:/etc/letsencrypt:ro
      - ./certbot-www:/var/www/certbot:ro

  tasks:
    build: ./tasks
    env_file:
      - .env
    container_name: tasks
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:rw
    environment:
      - COMPOSE_PROJECT_NAME=server_mgmt
    user: "0:0"  # Run as root to access docker socket
    restart: unless-stopped

  certbot:
    build: ./certbot
    env_file:
      - .env
    container_name: certbot
    volumes:
      - certbot-certs:/etc/letsencrypt
      - ./certbot-credentials:/etc/certbot-credentials:ro
    environment:
      - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
      - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
    # Route 53 DNS-01 challenge
    command: certonly -v --dns-route53 --email jacobleis@gmail.com --agree-tos --no-eff-email -d wintermind.io
    restart: "no"

  lazydocker:
    # Lazydocker is TUI/interactive; run it on-demand.
    # docker compose run --rm -it lazydocker
    image: lazyteam/lazydocker:latest
    container_name: lazydocker
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ${HOME}/.config/lazydocker:/.config/jesseduffield/lazydocker
    tty: true
    stdin_open: true

volumes:
  certbot-certs:

networks:
  # docker network create edge-proxy
  edge-proxy:
    external: true
    name: edge-proxy
